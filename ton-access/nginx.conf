events {
    worker_connections 1024;
}
http {
    limit_req_zone $binary_remote_addr zone=one:10m rate=2r/s;
    limit_req_status 429;
    limit_conn_status 429;

    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        # rate limit for all
        limit_req zone=one burst=5 nodelay;

        ###########
        # TONCENTER
        ###########
        # convert v2-mainnet get to post
        location /convert/jsonRPC {
            # If the json query parameter is present in the GET request
            if ($arg_json) {
                rewrite ^ /jsonRPC last;
            }
            # json param os missing
            return 400 "json query param is missing";

        }
        location /jsonRPC {
            # Proxy to the backend server, sending a POST request with the captured json value as the body
            proxy_pass http://v2-mainnet:8081;
            proxy_method POST;
            proxy_set_header Content-Type "application/json";
            proxy_set_body $arg_json;

        }
        location ~ "/[\d]/mainnet/toncenter-api-v2" {
            rewrite ^/[\d]/mainnet/toncenter-api-v2(.*)$ $1 break;
            proxy_pass http://v2-mainnet:8081;
        }
        location ~ "/[\d]/testnet/toncenter-api-v2" {
            rewrite ^/[\d]/testnet/toncenter-api-v2(.*)$ $1 break;
            proxy_pass http://v2-testnet:8081;
        }
        ###########
        # v4 http
        ###########
        # WS V4
        location ~ "/[\d]/mainnet/ton-api-v4/block/watch(.*)" {
            rewrite ^/[\d]/mainnet/ton-api-v4(.*)$ $1 break;
            proxy_pass http://v4-mainnet:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
        location ~ "/[\d]/testnet/ton-api-v4/block/watch(.*)" {
            rewrite ^/[\d]/testnet/ton-api-v4(.*)$ $1 break;
            proxy_pass http://v4-testnet:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
        # HTTP V4
        location ~ "/[\d]/mainnet/ton-api-v4" {
            rewrite ^/[\d]/mainnet/ton-api-v4(.*)$ $1 break;
            proxy_pass http://v4-mainnet:3000;
        }
        location ~ "/[\d]/testnet/ton-api-v4" {
            rewrite ^/[\d]/testnet/ton-api-v4(.*)$ $1 break;
            proxy_pass http://v4-testnet:3000;
        }

        ###########
        # mngr/health
        ###########
        location ^~ /mngr {
            rewrite /mngr(.*)$ $1 break;
            proxy_pass http://mngr:3000;
        }

        ###########
        # config json files for v4 to be routed to localhost
        # /usr/bin/ton/local.config.json
        ###########
        location /ton/local.config.json {
            default_type application/json;
            alias /ton/local.config.json;
        }
        ###########
        # index
        ###########
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}